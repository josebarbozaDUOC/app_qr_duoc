{"version":3,"file":"src_app_pages_login_login_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAJlC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBM;AACM;AACF;AAEA;AAEmB;AAEvB;IAW5B,eAAe,SAAf,eAAe;CAAG;AAAlB,eAAe;IAT3B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,yEAAsB;SACvB;QACD,YAAY,EAAE,CAAC,kDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnB5B;CAC4D;;CACA;;CACA;;IAO/CI,SAAS,SAATA,SAAS;EAKpB;EACAC,YAAoBC,MAApB,EAA4CC,eAA5C,EAA4E;IAAxD;IAAwB;IAC1C,KAAKC,OAAL,GAAe,IAAIL,0DAAJ,CAAY,EAAZ,EAAe,EAAf,EAAkB,EAAlB,EAAqB,EAArB,EAAwB,EAAxB,CAAf;IACA,KAAKK,OAAL,CAAaC,MAAb,GAAsB,EAAtB;IACA,KAAKD,OAAL,CAAaE,QAAb,GAAwB,EAAxB;IACA,KAAKF,OAAL,CAAaG,MAAb,GAAsB,EAAtB;IACA,KAAKH,OAAL,CAAaI,eAAb,GAA+B,EAA/B;IACA,KAAKJ,OAAL,CAAaK,gBAAb,GAAgC,EAAhC;EACD;;EAEDC,QAAQ,IACP;;EAEMC,mBAAmB;IACxB,KAAKT,MAAL,CAAYU,QAAZ,CAAqB,CAAC,oBAAD,CAArB;EACD,CApBmB,CAsBpB;;;EACOC,QAAQ;IAEb,IAAG,CAAC,KAAKC,cAAL,CAAoB,KAAKV,OAAzB,CAAJ,EAAuC;MACrC;IACD;;IAED,KAAKW,cAAL,CAAoB,cAApB;IAEA,MAAMC,gBAAgB,GAAqB;MACzCC,KAAK,EAAE;QACLb,OAAO,EAAE,KAAKA;MADT;IADkC,CAA3C,CARa,CAab;;IACA,KAAKF,MAAL,CAAYU,QAAZ,CAAqB,CAAC,OAAD,CAArB,EAAgCI,gBAAhC;EACD;;EAGMF,cAAc,CAACV,OAAD,EAAiB;IAEpC;IACA,MAAMc,IAAI,GAAG,KAAKd,OAAL,CAAae,mBAAb,CACX,KAAKf,OAAL,CAAaC,MADF,EACU,KAAKD,OAAL,CAAaE,QADvB,CAAb;;IAGA,IAAIY,IAAJ,EAAU;MACR,KAAKd,OAAL,GAAec,IAAf;MACA,OAAO,IAAP;IACD,CAHD,MAII;MACF,KAAKH,cAAL,CAAoB,mCAApB;MACA,OAAO,KAAP;IACD;EACF,CAvDmB,CAyDpB;;;EACMA,cAAc,CAACK,OAAD,EAAkBC,QAAlB,EAAmC;IAAA;;IAAA;MACrD,MAAMC,KAAK,SAAS,KAAI,CAACnB,eAAL,CAAqBoB,MAArB,CAA4B;QAC5CC,OAAO,EAAEJ,OADmC;QAE5CK,QAAQ,EAAEJ,QAAQ,GAAEA,QAAF,GAAY;MAFc,CAA5B,CAApB;MAIAC,KAAK,CAACI,OAAN;IALqD;EAMtD;;AAhEmB;;;QATb7B,mDAAMA;;QACNC,2DAAeA;;;AAQXE,SAAS,sDALrBJ,wDAAS,CAAC;EACT+B,QAAQ,EAAE,WADD;EAETC,UAAAA,wDAFS;;AAAA,CAAD,CAKY,GAAT5B,SAAS,CAAT","sources":["./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationExtras } from '@angular/router'; //para pasar info usuario entre login y home \nimport { ToastController } from '@ionic/angular';           //para mensajes flotantes\nimport { Usuario } from 'src/app/model/Usuario';            //import USUARIO\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  //instancia de usuario\n  public usuario: Usuario;\n\n  //pasamos los parámetros directos al constructor\n  constructor(private router: Router, private toastController: ToastController) {\n    this.usuario = new Usuario('','','','','');\n    this.usuario.correo = '';\n    this.usuario.password = '';\n    this.usuario.nombre = '';\n    this.usuario.preguntaSecreta = '';\n    this.usuario.respuestaSecreta = '';\n  }\n\n  ngOnInit() {\n  }\n\n  public irRecuperarPassword():void{\n    this.router.navigate(['/recuperarpassword']);\n  }\n\n  //método ingresar\n  public ingresar(): void {\n  \n    if(!this.validarUsuario(this.usuario)) {\n      return;\n    }\n \n    this.mostrarMensaje('¡Bienvenido!');\n\n    const navigationExtras: NavigationExtras = {\n      state: {\n        usuario: this.usuario\n      }\n    };\n    //Navegamos hacia el Home y nos llevamos los datos del usuario\n    this.router.navigate(['/home'], navigationExtras);\n  }\n\n\n  public validarUsuario(usuario: Usuario): boolean {\n \n    //se utilizan los datos ingresados por el usuario\n    const user = this.usuario.buscarUsuarioValido(\n      this.usuario.correo, this.usuario.password);\n \n    if (user) {\n      this.usuario = user;\n      return true;\n    }\n    else{\n      this.mostrarMensaje('Las credenciales no son correctas');\n      return false;\n    }\n  }\n\n  //utilizamos el toast para mensaje\n  async mostrarMensaje(mensaje: string, duracion?: number) {\n    const toast = await this.toastController.create({\n        message: mensaje,\n        duration: duracion? duracion: 2000\n      });\n    toast.present();\n  }\n}\n"],"names":["Component","Router","ToastController","Usuario","LoginPage","constructor","router","toastController","usuario","correo","password","nombre","preguntaSecreta","respuestaSecreta","ngOnInit","irRecuperarPassword","navigate","ingresar","validarUsuario","mostrarMensaje","navigationExtras","state","user","buscarUsuarioValido","mensaje","duracion","toast","create","message","duration","present","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}